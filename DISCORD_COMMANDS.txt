# GMO Coin Bot Discord Commands

## 利用可能なコマンド一覧

### 基本コマンド

#### `kill`
- **説明**: 全ポジションを即座に決済（緊急時）
- **権限**: 管理者のみ
- **使用例**: `!kill` または `kill`
- **動作**: 現在保有している全てのポジションを強制決済します

#### `stop`
- **説明**: ボットを停止
- **権限**: 管理者のみ
- **使用例**: `!stop` または `stop`
- **動作**: 残存ポジションを決済してからボットを停止します

#### `restart`
- **説明**: ボットを再起動
- **権限**: 管理者のみ
- **使用例**: `!restart` または `restart`
- **動作**: 設定を再読み込みし、ヘルスチェックを実行します

#### `position`
- **説明**: 現在のポジションを表示
- **権限**: 全ユーザー
- **使用例**: `!position` または `position`
- **動作**: 現在保有しているポジションの詳細と含み損益を表示

#### `status`
- **説明**: システムステータスを表示（詳細版）
- **権限**: 全ユーザー
- **使用例**: `!status` または `status`
- **動作**: システムの稼働状況、メモリ使用量、API接続状況などを表示

#### `health`
- **説明**: ヘルスチェックを実行（詳細版）
- **権限**: 全ユーザー
- **使用例**: `!health` または `health`
- **動作**: システム全体の健全性をチェックし、問題があれば報告

#### `performance [日数]`
- **説明**: パフォーマンスレポートを表示
- **権限**: 全ユーザー
- **使用例**: `!performance 7` または `performance 7`
- **動作**: 指定した日数分の取引パフォーマンスを表示（日数省略時は今日のみ）

#### `all`
- **説明**: 全情報を表示
- **権限**: 全ユーザー
- **使用例**: `!all` または `all`
- **動作**: システムステータス、現在のポジション、今日のパフォーマンスを一括表示

#### `schedule`
- **説明**: 取引スケジュールを表示
- **権限**: 全ユーザー
- **使用例**: `!schedule` または `schedule`
- **動作**: trades.csvの内容を読み込んで今日の取引スケジュールを表示

### 管理コマンド

#### `backup`
- **説明**: 手動バックアップを実行（詳細版）
- **権限**: 管理者のみ
- **使用例**: `!backup` または `backup`
- **動作**: 設定ファイル、ログ、取引スケジュールをバックアップ

#### `memory`
- **説明**: メモリ使用量を表示
- **権限**: 全ユーザー
- **使用例**: `!memory` または `memory`
- **動作**: 現在のメモリ使用量と詳細情報を表示

#### `cleanup`
- **説明**: メモリクリーンアップを実行
- **権限**: 管理者のみ
- **使用例**: `!cleanup` または `cleanup`
- **動作**: メモリの最適化とガベージコレクションを実行

#### `reload`
- **説明**: 設定を再読み込み
- **権限**: 管理者のみ
- **使用例**: `!reload` または `reload`
- **動作**: config.jsonの設定を再読み込み

#### `testlot [通貨ペア] [売買方向]`
- **説明**: ロット計算テスト
- **権限**: 全ユーザー
- **使用例**: `!testlot EUR_JPY SELL` または `testlot EUR_JPY SELL`
- **動作**: 指定した通貨ペアと売買方向でのロット計算をテスト実行

#### `debuglot [通貨ペア] [売買方向]`
- **説明**: ロット計算デバッグ
- **権限**: 全ユーザー
- **使用例**: `!debuglot USD_JPY BUY` または `debuglot USD_JPY BUY`
- **動作**: ロット計算の詳細なデバッグ情報を表示

#### `command`
- **説明**: このコマンド一覧を表示
- **権限**: 全ユーザー
- **使用例**: `!command` または `command`
- **動作**: 利用可能なコマンドの一覧と説明を表示

## コマンド使用例

### 基本的な監視
```
!status          # システム状態確認
!position        # 現在のポジション確認
!schedule        # 今日の取引スケジュール確認
```

### パフォーマンス確認
```
!performance     # 今日のパフォーマンス
!performance 7   # 過去7日間のパフォーマンス
!all             # 全情報を一括表示
```

### システム管理
```
!health          # ヘルスチェック
!memory          # メモリ使用量確認
!backup          # 手動バックアップ
```

### 緊急時
```
!kill            # 全ポジション強制決済
!stop            # ボット停止
!restart         # ボット再起動
```

### ロット計算テスト
```
!testlot USD_JPY BUY     # USD/JPY買いのロット計算テスト
!testlot EUR_JPY SELL    # EUR/JPY売りのロット計算テスト
!debuglot GBP_JPY BUY    # GBP/JPY買いのデバッグ情報
```

## 注意事項

1. **権限**: 管理者権限が必要なコマンドは、Discordサーバーの管理者のみ実行可能
2. **レート制限**: コマンドの実行頻度に制限があります
3. **エラーハンドリング**: コマンド実行時にエラーが発生した場合は、詳細なエラーメッセージが表示されます
4. **ログ記録**: 全てのコマンド実行はログに記録されます

## システム機能

### 新機能
- 詳細な自動ロット計算（通貨ペア別）
- API手数料管理と追跡
- 銘柄別取引数量制限
- 詳細なスプレッド管理
- 重複建玉防止機能
- 未認識ポジション処理
- 詳細なログ管理（ローテーション付き）
- 詳細なメモリ管理とクリーンアップ
- 動的レート制限調整
- 詳細なバックアップと整合性チェック
- 詳細なヘルスチェック

### 自動機能
- 起動時のtrades.csvエントリー一覧表示
- 定期ポジション監視
- 自動バックアップ
- メモリクリーンアップ
- エラー時の自動再起動
- 日次取引数量リセット 